{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","for","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","rows","background","value","onChange","event","target","placeholder","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","word","alert","role","charAt","slice","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","components_Navbar","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.3c3e92e1.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                Home\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                About Us\n              </a>\n            </li>\n          </ul>\n          <div className=\"form-check form-switch\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"flexSwitchCheckDefault\"\n              onClick={props.toggleMode}\n            />\n            <label className={`form-check-label text-${props.mode==='light'?'black':'white'}`} for=\"flexSwitchCheckDefault\">\n              Enable DarkMode\n            </label>\n          </div>\n         \n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n\nNavbar.propTypes = { title: PropTypes.string };\nNavbar.defaultProps = {\n  title: \"set Title Here\",\n};\n","import React,{useState} from \"react\";\n\nexport default function TextForm(props) {\n  const handleUpClick=()=>{\n    let newText=text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"text changed to Upper Case\",\"success\")\n  }\n  const handleDownClick=()=>{\n    let newText=text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"text changed to lower Case\",\"success\")\n  }\n  const handleClear=()=>{\n    setText(\"\");\n    props.showAlert(\"text Cleard\",\"success\")\n  }\n  const handleOnChange=(event)=>{\n    setText(event.target.value);\n  }\n  const [text,setText]=useState('');\n  return (\n    <div style={{color:props.mode==='light'?'#042743':'white'}}> \n      <h1>{props.heading}</h1>\n      <div className=\"mb-3\">\n        <textarea className=\"form-control\" id=\"myBox\" rows=\"3\" style={{background:props.mode==='light'?'white':'grey',color:props.mode==='light'?'#042743':'white'}}value={text} onChange={handleOnChange} placeholder=\"Enter Text Here\"></textarea>\n      </div>\n      <button className='btn btn-primary mx-1' onClick={handleUpClick}>To UpperCase</button>\n      <button className=\"btn btn-primary mx-1\" onClick={handleDownClick}>To LowerCase</button>\n      <button className=\"btn btn-primary mx-1\" onClick={handleClear}>Clear</button>\n      <div className=\"my-2 mx-2\">\n        <p>{text===\"\"?0:text.split(\" \").length} Words and {text.length} Characters</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n  const capitalise=(word)=>{\n    return word.charAt(0).toUpperCase()+ word.slice(1).toLowerCase()\n  }\n  return (\n   props.alert &&  <div>\n      <div className={`alert alert-${props.alert.type} fade show`} role=\"alert\">\n        <strong>{capitalise(props.alert.type)}: </strong>{props.alert.msg}\n      </div>\n    </div>\n  );\n}\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500)\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode has been enabled\", \"success\")\n      document.title = \"Text Utils - Dark Mode\"\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Dark Mode has been disabled\", \"success\")\n      document.title = \"Text Utils - Light Mode\"\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className='container'>\n          <div>\n          <TextForm heading=\"Enter Text To Analyze\" mode={mode} showAlert={showAlert} />\n            {/* <Routes> */}\n              {/* <Route path=\"/about\" element={<About/>}/> */}\n              {/* <Route path=\"/\"element={<TextForm heading=\"Enter Text To Analyze\" mode={mode} showAlert={showAlert} />} /> */}\n            {/* </Routes> */}\n          </div>\n      </div>\n      {/* </Router> */}\n      </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}